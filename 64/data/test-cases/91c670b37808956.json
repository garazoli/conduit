{
  "uid" : "91c670b37808956",
  "name" : "test_pagination",
  "fullName" : "selenium_tests.test_A025_pagination#test_pagination",
  "historyId" : "e6d7bfb49b9ee16ee29d5d3467c66e7c",
  "time" : {
    "start" : 1628088539275,
    "stop" : 1628089026258,
    "duration" : 486983
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 75 == 30\n +  where 75 = len(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])\n +  and   30 = len({'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...})\n +    where {'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...} = set(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])",
  "statusTrace" : "def test_pagination():\n        # Bejelentkezés\n        # Sign in gombra kattintás\n        driver.find_element_by_xpath(locators.sign_in_x).click()\n        time.sleep(10)\n    \n        # Bejelentkezési adatok kitöltése\n        driver.find_element_by_xpath(locators.si_email_x).send_keys('testuser2@example.com')\n        driver.find_element_by_xpath(locators.si_password_x).send_keys('Abcd123$')\n        driver.find_element_by_xpath(locators.sign_in_button_x).click()\n        time.sleep(10)\n    \n        driver.find_element_by_xpath(locators.new_article_x).click()\n        time.sleep(10)\n    \n        # Postok feltöltése fileból, hogy lapozható felületet kapjak:\n        # A postok címe mindegyik esetben más, hogy az esetleges ismétlődések kiszűrhetőek legyenek.\n        with open('selenium_tests/pagination_data_in.csv', encoding='UTF-8') as csvfile:\n            csvreader = csv.reader(csvfile, delimiter=';')\n            next(csvreader)\n    \n            for row in csvreader:\n                driver.find_element_by_xpath(locators.title_x).send_keys(row[0])\n                driver.find_element_by_xpath(locators.about_x).send_keys(row[1])\n                driver.find_element_by_xpath(locators.article_x).send_keys(row[2])\n                driver.find_element_by_xpath(locators.tag_x).send_keys(row[3])\n                time.sleep(5)\n                driver.find_element_by_xpath(locators.publish_button_x).click()\n                time.sleep(5)\n                driver.find_element_by_xpath(locators.new_article_x).click()\n                time.sleep(5)\n    \n        # A felhasználó oldarára navigálás\n        driver.find_element_by_xpath(locators.user_x).click()\n        time.sleep(10)\n    \n        # Lapozó hivatkozások kigyűjtése\n        page_links = driver.find_elements_by_xpath('//a[@class=\"page-link\"]')\n    \n        # Ebbe a listába gyűjtöm a különféle lepokon található címeket\n        titles_list = []\n    \n        for link in page_links:\n            link.click()\n            time.sleep(5)\n            titles = driver.find_elements_by_xpath('//h1')\n            for title in titles:\n                titles_list.append(title.text)\n    \n        # A lapokról összegyűjtött címek listájának hosszának,\n        # és az ismétlődések nélküli lista hosszának kellene megegyeznie,\n        # ez mutatná, hogy a lapozófelület megfelelően működik.\n    \n        print(len(titles_list))  # Az összes összegyűjtött cím\n        print(len(set(titles_list)))  # Ennyinek kellene látszódnia összesen\n>       assert len(titles_list) == len(set(titles_list))\nE       AssertionError: assert 75 == 30\nE        +  where 75 = len(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])\nE        +  and   30 = len({'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...})\nE        +    where {'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...} = set(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])\n\nselenium_tests/test_A025_pagination.py:76: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 75 == 30\n +  where 75 = len(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])\n +  and   30 = len({'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...})\n +    where {'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...} = set(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])",
    "statusTrace" : "def test_pagination():\n        # Bejelentkezés\n        # Sign in gombra kattintás\n        driver.find_element_by_xpath(locators.sign_in_x).click()\n        time.sleep(10)\n    \n        # Bejelentkezési adatok kitöltése\n        driver.find_element_by_xpath(locators.si_email_x).send_keys('testuser2@example.com')\n        driver.find_element_by_xpath(locators.si_password_x).send_keys('Abcd123$')\n        driver.find_element_by_xpath(locators.sign_in_button_x).click()\n        time.sleep(10)\n    \n        driver.find_element_by_xpath(locators.new_article_x).click()\n        time.sleep(10)\n    \n        # Postok feltöltése fileból, hogy lapozható felületet kapjak:\n        # A postok címe mindegyik esetben más, hogy az esetleges ismétlődések kiszűrhetőek legyenek.\n        with open('selenium_tests/pagination_data_in.csv', encoding='UTF-8') as csvfile:\n            csvreader = csv.reader(csvfile, delimiter=';')\n            next(csvreader)\n    \n            for row in csvreader:\n                driver.find_element_by_xpath(locators.title_x).send_keys(row[0])\n                driver.find_element_by_xpath(locators.about_x).send_keys(row[1])\n                driver.find_element_by_xpath(locators.article_x).send_keys(row[2])\n                driver.find_element_by_xpath(locators.tag_x).send_keys(row[3])\n                time.sleep(5)\n                driver.find_element_by_xpath(locators.publish_button_x).click()\n                time.sleep(5)\n                driver.find_element_by_xpath(locators.new_article_x).click()\n                time.sleep(5)\n    \n        # A felhasználó oldarára navigálás\n        driver.find_element_by_xpath(locators.user_x).click()\n        time.sleep(10)\n    \n        # Lapozó hivatkozások kigyűjtése\n        page_links = driver.find_elements_by_xpath('//a[@class=\"page-link\"]')\n    \n        # Ebbe a listába gyűjtöm a különféle lepokon található címeket\n        titles_list = []\n    \n        for link in page_links:\n            link.click()\n            time.sleep(5)\n            titles = driver.find_elements_by_xpath('//h1')\n            for title in titles:\n                titles_list.append(title.text)\n    \n        # A lapokról összegyűjtött címek listájának hosszának,\n        # és az ismétlődések nélküli lista hosszának kellene megegyeznie,\n        # ez mutatná, hogy a lapozófelület megfelelően működik.\n    \n        print(len(titles_list))  # Az összes összegyűjtött cím\n        print(len(set(titles_list)))  # Ennyinek kellene látszódnia összesen\n>       assert len(titles_list) == len(set(titles_list))\nE       AssertionError: assert 75 == 30\nE        +  where 75 = len(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])\nE        +  and   30 = len({'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...})\nE        +    where {'Dui lentesque', 'Duis pellentesque', 'Eget mi proin sed libero', 'Fus tor', 'Fusce auctor', 'In nisl nisi scelerisque eu', ...} = set(['In nisl nisi scelerisque eu', 'Eget mi proin sed libero', 'Nunc porttitor', 'Mauris pretium', 'Fusce auctor', 'Sed ut odio', ...])\n\nselenium_tests/test_A025_pagination.py:76: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d59ab9c43ab2e8b",
      "name" : "stdout",
      "source" : "d59ab9c43ab2e8b.txt",
      "type" : "text/plain",
      "size" : 6
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "selenium_tests"
  }, {
    "name" : "suite",
    "value" : "test_A025_pagination"
  }, {
    "name" : "host",
    "value" : "fv-az39-971"
  }, {
    "name" : "thread",
    "value" : "3662-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "selenium_tests.test_A025_pagination"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "983eb978f2d26b09",
        "reportUrl" : "https://garazoli.github.io/conduit/63//#testresult/983eb978f2d26b09",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#/editor\" class=\"nav-link\">...</a> is not clickable at point (445, 26). Other element would receive the click: <div class=\"swal-overlay swal-overlay--show-modal\" tabindex=\"-1\">...</div>\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628088550832,
          "stop" : 1628088731593,
          "duration" : 180761
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "91c670b37808956.json",
  "parameterValues" : [ ]
}