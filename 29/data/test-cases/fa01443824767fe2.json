{
  "uid" : "fa01443824767fe2",
  "name" : "test_reg",
  "fullName" : "selenium_tests.test_A001_registration#test_reg",
  "historyId" : "a97c9e4c1f23c711b87b6900c19d02b1",
  "time" : {
    "start" : 1627150785978,
    "stop" : 1627150788821,
    "duration" : 2843
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
  "statusTrace" : "def test_reg():\n        # Random username és email generálás\n        class MyRND:\n            chars = string.ascii_lowercase\n    \n            @classmethod\n            def uname(cls):\n                return \"\".join([random.choice(cls.chars) for _ in range(8)])\n    \n        random_user = MyRND.uname()\n    \n        # Sign up gombra kattintás\n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[3]/a').click()\n        driver.implicitly_wait(10)\n    \n        # Kitöltendő mezők kinyerése\n        username = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[1]/input')\n        email = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[2]/input')\n        password = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[3]/input')\n        sign_up_button = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button')\n        driver.implicitly_wait(10)\n    \n        # Mezők kitöltése tesztadatokkal\n        username.send_keys(random_user)\n        email.send_keys(random_user + '@example.com')\n        password.send_keys('Abcd123$')\n        sign_up_button.click()\n        driver.implicitly_wait(10)\n    \n        # A regisztráció sikerességének ellenőrzése\n>       assert (driver.find_element_by_xpath('/html/body/div[2]/div/div[3]').text == 'Your registration was successful!')\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\nselenium_tests/test_A001_registration.py:51: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "selenium_tests"
  }, {
    "name" : "suite",
    "value" : "test_A001_registration"
  }, {
    "name" : "host",
    "value" : "fv-az83-685"
  }, {
    "name" : "thread",
    "value" : "4238-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "selenium_tests.test_A001_registration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "da96a6ec22a655dc",
        "reportUrl" : "https://garazoli.github.io/conduit/28//#testresult/da96a6ec22a655dc",
        "status" : "passed",
        "time" : {
          "start" : 1627150423528,
          "stop" : 1627150426097,
          "duration" : 2569
        }
      }, {
        "uid" : "4cd5bba697c1e507",
        "reportUrl" : "https://garazoli.github.io/conduit/27//#testresult/4cd5bba697c1e507",
        "status" : "passed",
        "time" : {
          "start" : 1627150035304,
          "stop" : 1627150038808,
          "duration" : 3504
        }
      }, {
        "uid" : "5ca984a0f98e74c6",
        "reportUrl" : "https://garazoli.github.io/conduit/26//#testresult/5ca984a0f98e74c6",
        "status" : "passed",
        "time" : {
          "start" : 1627149369549,
          "stop" : 1627149372883,
          "duration" : 3334
        }
      }, {
        "uid" : "ed18a4b7df788bcc",
        "reportUrl" : "https://garazoli.github.io/conduit/25//#testresult/ed18a4b7df788bcc",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
        "time" : {
          "start" : 1627148811454,
          "stop" : 1627148813474,
          "duration" : 2020
        }
      }, {
        "uid" : "14a9969b30a3ad58",
        "reportUrl" : "https://garazoli.github.io/conduit/24//#testresult/14a9969b30a3ad58",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
        "time" : {
          "start" : 1627147887662,
          "stop" : 1627147889806,
          "duration" : 2144
        }
      }, {
        "uid" : "7e7c02845a60eeef",
        "reportUrl" : "https://garazoli.github.io/conduit/23//#testresult/7e7c02845a60eeef",
        "status" : "passed",
        "time" : {
          "start" : 1627147344270,
          "stop" : 1627147346655,
          "duration" : 2385
        }
      }, {
        "uid" : "3c49b9d7e6ce327d",
        "reportUrl" : "https://garazoli.github.io/conduit/22//#testresult/3c49b9d7e6ce327d",
        "status" : "passed",
        "time" : {
          "start" : 1627146870182,
          "stop" : 1627146872886,
          "duration" : 2704
        }
      }, {
        "uid" : "b250de9f8fccc91e",
        "reportUrl" : "https://garazoli.github.io/conduit/21//#testresult/b250de9f8fccc91e",
        "status" : "passed",
        "time" : {
          "start" : 1627146392299,
          "stop" : 1627146395063,
          "duration" : 2764
        }
      }, {
        "uid" : "6d8495add1438ba2",
        "reportUrl" : "https://garazoli.github.io/conduit/20//#testresult/6d8495add1438ba2",
        "status" : "passed",
        "time" : {
          "start" : 1627146107381,
          "stop" : 1627146110700,
          "duration" : 3319
        }
      }, {
        "uid" : "5fdfd6fc010e1cdd",
        "reportUrl" : "https://garazoli.github.io/conduit/19//#testresult/5fdfd6fc010e1cdd",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
        "time" : {
          "start" : 1627145618173,
          "stop" : 1627145621126,
          "duration" : 2953
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fa01443824767fe2.json",
  "parameterValues" : [ ]
}