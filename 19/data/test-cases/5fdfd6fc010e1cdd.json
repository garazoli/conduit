{
  "uid" : "5fdfd6fc010e1cdd",
  "name" : "test_reg",
  "fullName" : "selenium_tests.test_A001_registration#test_reg",
  "historyId" : "a97c9e4c1f23c711b87b6900c19d02b1",
  "time" : {
    "start" : 1627145618173,
    "stop" : 1627145621126,
    "duration" : 2953
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
  "statusTrace" : "def test_reg():\n        # Random username és email generálás\n        class MyRND:\n            chars = string.ascii_lowercase\n    \n            @classmethod\n            def uname(cls):\n                return \"\".join([random.choice(cls.chars) for _ in range(8)])\n    \n        random_user = MyRND.uname()\n    \n        # Sign up gombra kattintás\n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[3]/a').click()\n        driver.implicitly_wait(3)\n    \n        # Kitöltendő mezők kinyerése\n        username = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[1]/input')\n        email = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[2]/input')\n        password = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[3]/input')\n        sign_up_button = driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button')\n        driver.implicitly_wait(3)\n    \n        # Mezők kitöltése tesztadatokkal\n        username.send_keys(random_user)\n        email.send_keys(random_user + '@example.com')\n        password.send_keys('Abcd123$')\n        sign_up_button.click()\n        driver.implicitly_wait(5)\n    \n        # A regisztráció sikerességének ellenőrzése\n>       assert (driver.find_element_by_xpath('/html/body/div[2]/div/div[3]').text == 'Your registration was successful!')\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\nselenium_tests/test_A001_registration.py:50: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "selenium_tests"
  }, {
    "name" : "suite",
    "value" : "test_A001_registration"
  }, {
    "name" : "host",
    "value" : "fv-az83-685"
  }, {
    "name" : "thread",
    "value" : "4269-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "selenium_tests.test_A001_registration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5fdfd6fc010e1cdd.json",
  "parameterValues" : [ ]
}